设计模式：
单例模式：
整个程序内某个类只有一个实例化对象，例如一些配置类等。
懒汉模式：只有到第一次用到的时候再去实例化，以时间换空间。
饿汉模式：单例类定义时就进行实例化，以空间换时间。
单例的实现：
1. 构造方法定义为私有方法
2. 类内提供一个静态方法，调用该方法时，查看该类持有的单例对象是否为空，如果为空，则创建一个实例化对象并赋给该类持有的引用。

工厂模式：将实例化对象的方法抽象出来，使得所有选择实例化对象种类的操作都放在工厂类中，对外只提供一个接口。

观察者模式：有一个主题，和一些观察者，由主题来向观察者发送通知，其实就是一种通知机制。